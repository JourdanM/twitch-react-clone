{"version":3,"sources":["Components/Header/IconeTwitch.svg","Components/Header/Search.svg","Components/Header/MenuIco.svg","Components/Header/Croix.svg","Components/Header/Header.js","api.js","Components/Sidebar/Sidebar.js","Components/Games/Games.js","Components/TopStreams/TopStreams.js","Components/Live/Live.js","Components/GameStreams/GameStreams.js","Components/Erreur/Erreur.js","Components/Resultats/Resultats.js","App.js","index.js"],"names":["Header","useState","menu","showMenu","smallScreen","setSmallScreen","searchInput","setSearch","useEffect","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","hideMenu","className","onClick","to","src","logo","alt","onSubmit","e","preventDefault","required","value","onChange","target","handleKeyPress","type","pathname","search","croix","menuIco","api","axios","create","headers","Sidebar","topStreams","setTopStreams","fetchData","a","get","result","dataArr","data","userIds","map","stream","user_id","queryParamsUsers","id","urlFinaleUsers","getUsers","usersArr","finalArray","profilePic","login","forEach","user","profile_image_url","slice","index","user_name","viewer_count","game_name","Games","games","setGames","dataArray","game","newUrl","box_art_url","replace","name","state","gameId","TopStreams","channels","setChannels","thumbnail_url","channel","Live","slug","useParams","infoStream","setInfoStream","infoGame","setInfoGame","length","gameid","game_id","resultNomGame","nomGame","gameName","height","width","title","language","GameStreams","location","useLocation","streamData","setStreamData","viewers","setViewers","totalViewers","reduce","acc","val","console","log","user_login","Erreur","Resultats","setResult","streamerInfo","setStreamerInfo","cleanSearch","display_name","description","App","basename","process","forceRefresh","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1534ee66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/IconeTwitch.398a24e3.svg\";","export default __webpack_public_path__ + \"static/media/Search.cc51b702.svg\";","export default __webpack_public_path__ + \"static/media/MenuIco.620d038d.svg\";","export default __webpack_public_path__ + \"static/media/Croix.17dba8f1.svg\";","import React, { useState, useEffect } from \"react\";\nimport logo from \"./IconeTwitch.svg\";\nimport search from \"./Search.svg\";\nimport menuIco from \"./MenuIco.svg\";\nimport croix from \"./Croix.svg\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  const [menu, showMenu] = useState(false);\n  const [smallScreen, setSmallScreen] = useState(false);\n  const [searchInput, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 900px)\");\n    // addlistener c'est comme addeventlisterner pour les medias queries en JS\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  });\n\n  const handleMediaQueryChange = (mediaQuery) => {\n    if (mediaQuery.matches) {\n      setSmallScreen(true);\n    } else {\n      setSmallScreen(false);\n    }\n  };\n\n  const toggleNavRes = () => {\n    showMenu(!menu);\n  };\n\n  const hideMenu = () => {\n    if (menu === true) {\n      showMenu(!menu);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const handleKeyPress = (e) => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <div>\n      <nav className=\"headerTop\">\n        {(menu || !smallScreen) && (\n          <ul className=\"listeMenu\">\n            <li onClick={hideMenu} className=\"liensNav\">\n              <Link className=\"lien\" to=\"/\">\n                <img src={logo} alt=\"logo twitch\" className=\"logo\" />\n              </Link>\n            </li>\n            <li onClick={hideMenu} className=\"liensNav\">\n              <Link className=\"lien\" to=\"/\">\n                Top Games\n              </Link>\n            </li>\n            <li onClick={hideMenu} className=\"liensNav\">\n              <Link className=\"lien\" to=\"/top-streams\">\n                Top Streams\n              </Link>\n            </li>\n            <li className=\"liensNav\">\n              <form className=\"formSubmit\" onSubmit={handleSubmit}>\n                <input\n                  required\n                  value={searchInput}\n                  onChange={(e) => handleKeyPress(e)}\n                  type=\"text\"\n                  className=\"inputRecherche\"\n                />\n\n                <Link\n                  className=\"lien\"\n                  to={{\n                    pathname: `/resultats/${searchInput}`,\n                  }}\n                >\n                  <button type=\"submit\">\n                    <img src={search} alt=\"icone loupe\" className=\"logoLoupe\" />\n                  </button>\n                </Link>\n              </form>\n            </li>\n          </ul>\n        )}\n      </nav>\n\n      <div className=\"menuResBtn\">\n        <img\n          onClick={toggleNavRes}\n          src={!menu ? menuIco : croix}\n          alt=\"icone menu responsive\"\n          className=\"menuIco\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import axios from \"axios\";\n\nlet api = axios.create({\n  headers: {\n    \"Client-ID\": \"ezo79jagtt5amy37aqor5nxzt6hmla\",\n    \"Authorization\": \"Bearer mzwydudgfec8ih8fmp78jtrxhxrffm\"\n  },\n});\n\n/*\n    CLIENT_ID = ezo79jagtt5amy37aqor5nxzt6hmla\n    REDIRECT = 'http://localhost/'\n    LIEN AUTH = https://id.twitch.tv/oauth2/authorize?client_id={CLIENT_ID}&redirect_uri={REDIRECT}&response_type=token\n\n    LIEN = https://id.twitch.tv/oauth2/authorize?client_id=ezo79jagtt5amy37aqor5nxzt6hmla&redirect_uri=http://localhost/&response_type=token\n*/ \n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Sidebar() {\n  const [topStreams, setTopStreams] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n      let dataArr = result.data.data;\n      // console.log(dataArr);\n\n      let userIds = dataArr.map((stream) => {\n        return stream.user_id;\n      });\n\n      // console.log(gameIds, userIds);\n\n      // Création des URLS personnalisées\n\n      let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n\n      // let queryParamsGames = \"\";\n      let queryParamsUsers = \"\";\n\n      userIds.map((id) => {\n        return (queryParamsUsers = queryParamsUsers + `id=${id}&`);\n      });\n\n      // URL finale\n      let urlFinaleUsers = baseUrlUsers + queryParamsUsers;\n\n      // console.log(\"URL USERS: \" + urlFinaleUsers);\n\n      // Appels\n      let getUsers = await api.get(urlFinaleUsers);\n\n      let usersArr = getUsers.data.data;\n\n      // console.log(usersArr);\n\n      // Création du tableau final\n      let finalArray = dataArr.map((stream) => {\n        stream.profilePic = \"\";\n        stream.login = \"\";\n\n        usersArr.forEach((user) => {\n          if (stream.user_id === user.id) {\n            stream.profilePic = user.profile_image_url;\n            stream.login = user.login;\n          }\n        });\n        return stream;\n      });\n      setTopStreams(finalArray.slice(0, 6));\n    };\n\n    fetchData();\n  }, []);\n\n  // console.log(topStreams);\n\n  return (\n    <div className=\"sidebar\">\n      <h2 className=\"titreSidebar\">Chaînes recommandées</h2>\n      <ul className=\"listeStream\">\n        {topStreams.map((stream, index) => (\n          <Link\n            key={index}\n            className=\"lien\"\n            to={{\n              pathname: `/live/${stream.login}`,\n            }}\n          >\n            <li key={index} className=\"containerFlexSidebar\">\n              <img\n                src={stream.profilePic}\n                alt=\"logo user\"\n                className=\"profilePicRonde\"\n              />\n              <div className=\"streamUser\">{stream.user_name}</div>\n              <div className=\"viewerRight\">\n                <div className=\"pointRouge\"></div>\n                <div>{stream.viewer_count}</div>\n              </div>\n              <div className=\"gameNameSidebar\">{stream.game_name}</div>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Games() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top\");\n\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map((game) => {\n        let newUrl = game.box_art_url\n          .replace(\"{width}\", \"250\")\n          .replace(\"{height}\", \"300\");\n\n        game.box_art_url = newUrl;\n        return game;\n      });\n\n      setGames(finalArray);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"titreGames\">Jeux les plus populaires</h1>\n      <div className=\"flexAccueil\">\n        {games.map((game, index) => (\n          <div key={index} className=\"carteGames\">\n            <img\n              src={game.box_art_url}\n              alt=\"jeu profile pic\"\n              className=\"imgCarte\"\n            />\n            <div className=\"cardBodyGames\">\n              <h1 className=\"titreCartesGames\">{game.name}</h1>\n              <Link\n                className=\"lien\"\n                to={{\n                  pathname: \"game/\" + game.name,\n                  state: { gameId: game.id },\n                }}\n              >\n                <div className=\"btnCarte\">Regarder {game.name}</div>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\nexport default function TopStreams() {\n  const [channels, setChannels] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n      let dataArr = result.data.data;\n      // console.log(dataArr);\n\n      let userIds = dataArr.map((stream) => {\n        return stream.user_id;\n      });\n\n      // console.log(gameIds, userIds);\n\n      // Création des URLS personnalisées\n\n      let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n\n      // let queryParamsGames = \"\";\n      let queryParamsUsers = \"\";\n\n      userIds.map((id) => {\n        return (queryParamsUsers = queryParamsUsers + `id=${id}&`);\n      });\n\n      // URL finale\n      let urlFinaleUsers = baseUrlUsers + queryParamsUsers;\n\n      // console.log(\"URL USERS: \" + urlFinaleUsers);\n\n      // Appels\n      let getUsers = await api.get(urlFinaleUsers);\n\n      let usersArr = getUsers.data.data;\n\n      // console.log(usersArr);\n\n      // Création du tableau final\n      let finalArray = dataArr.map((stream) => {\n        stream.login = \"\";\n\n        usersArr.forEach((user) => {\n          if (stream.user_id === user.id) {\n            stream.login = user.login;\n          }\n        });\n        let newUrl = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newUrl;\n        return stream;\n      });\n      setChannels(finalArray);\n    };\n\n    fetchData();\n  }, []);\n\n  //   console.log(channels);\n\n  return (\n    <div>\n      <h1 className=\"titreGames\">Streams les plus populaires</h1>\n      <div className=\"flexAccueil\">\n        {channels.map((channel, index) => (\n          <div key={index} className=\"carteStream\">\n            <img src={channel.thumbnail_url} alt=\"jeu\" className=\"imgCarte\" />\n            <div className=\"cardBodyStream\">\n              <h5 className=\"titreCarteStream\">{channel.user_name}</h5>\n              <p className=\"txtStream\">Jeu : {channel.game_name}</p>\n              <p className=\"txtStream viewers\">\n                Viewers : {channel.viewer_count}\n              </p>\n              <Link\n                className=\"lien\"\n                to={{ pathname: `/live/${channel.login}` }}\n              >\n                <div className=\"btnCarte\">Regarder {channel.user_name}</div>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\nimport { useParams } from \"react-router\";\nimport api from \"../../api\";\n\nexport default function Live() {\n  let { slug } = useParams();\n\n  const [infoStream, setInfoStream] = useState([]);\n  const [infoGame, setInfoGame] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?user_login=${slug}`\n      );\n\n      if (result.data.data.length === 0) {\n        setInfoStream(false);\n      } else {\n        let gameId = result.data.data.map((gameid) => {\n          return gameid.game_id;\n        });\n\n        const resultNomGame = await api.get(\n          `https://api.twitch.tv/helix/games?id=${gameId}`\n        );\n\n        let nomGame = resultNomGame.data.data.map((gameName) => {\n          return gameName.name;\n        });\n\n        setInfoGame(nomGame);\n        setInfoStream(result.data.data[0]);\n      }\n    };\n\n    fetchData();\n  }, [slug]);\n\n  return infoStream ? (\n    <div className=\"containerDecale\">\n      <ReactTwitchEmbedVideo height=\"754\" width=\"100%\" channel={slug} />\n      <div className=\"accountInfo\">\n        <div className=\"titreStream\">{infoStream.title}</div>\n        <div className=\"viewer\">Viewers: {infoStream.viewer_count}</div>\n        <div className=\"infoGame\">\n          Streamer: {infoStream.user_name}, &nbsp; Langue: {infoStream.language}\n        </div>\n        <div className=\"nomGame\">Jeu: {infoGame}</div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"containerDecale\">\n      <ReactTwitchEmbedVideo height=\"754\" width=\"100%\" channel={slug} />\n      <div className=\"accountInfo\">\n        <div className=\"titreStream\">Le Streamer est offline</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../api\";\n\nexport default function GameStreams() {\n  let location = useLocation();\n  let { slug } = useParams();\n\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameId}`\n      );\n      //   console.log(result);\n\n      let dataArr = result.data.data;\n      let finalArray = dataArr.map((stream) => {\n        let newUrl = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newUrl;\n\n        return stream;\n      });\n\n      // Calcul total viewers\n      let totalViewers = finalArray.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n\n      setStreamData(finalArray);\n      setViewers(totalViewers);\n    };\n\n    fetchData();\n  }, [location.state.gameId]);\n\n  console.log(streamData);\n  //   console.log(viewers);\n\n  return (\n    <div>\n      <h1 className=\"titreGamesStreams\">Streams: {slug}</h1>\n      <h3 className=\"sousTitreGameStreams\">\n        <strong className=\"textColored\">{viewers}</strong> personnes regardent{\" \"}\n        {slug}\n      </h3>\n      <div className=\"flexAccueil\">\n        {streamData.map((stream, index) => (\n          <div key={index} className=\"carteGameStreams\">\n            <img\n              src={stream.thumbnail_url}\n              alt=\"jeu carte\"\n              className=\"imgCarte\"\n            />\n            <div className=\"cardBodyGameStreams\">\n              <h5 className=\"titreCartesStream\">{stream.user_name}</h5>\n              <p className=\"txtStream\">\n                Nombre de viewers: {stream.viewer_count}\n              </p>\n              <Link\n                className=\"lien\"\n                to={{\n                  pathname: `/live/${stream.user_login}`,\n                }}\n              >\n                <div className=\"btnCarte\">Regarder {stream.user_name}</div>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Erreur() {\n  return (\n    <div className=\"containerDecaleResultats\">\n      <h4>\n        Résultats de recherche: Pas de résultats, <br /> Vérifiez l'orthographe\n        de votre saisie, ou ce streamer n'existe pas.\n      </h4>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport api from '../../api';\nimport {Link, useParams} from 'react-router-dom';\nimport Erreur from '../Erreur/Erreur';\n\nfunction Resultats(){\n\n    let {slug} = useParams();\n\n    const [result, setResult] = useState(true);\n    const [streamerInfo, setStreamerInfo] = useState([]);\n\n    let cleanSearch = slug.replace(/ /g,'');\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n\n            const result = await api.get(`https://api.twitch.tv/helix/users?login=${cleanSearch}`)\n            // console.log(result);\n            \n            if(result.data.data.length === 0) {\n                setResult(false);\n            } else {\n                setStreamerInfo(result.data.data)\n            }\n\n        }\n        fetchData();\n\n    }, [cleanSearch])\n\n    return (\n\n        result ? \n        \n        <div>\n           \n            <div className=\"containerDecaleResultats\">\n                <h4>Résultats de recherche : </h4>\n\n                {streamerInfo.map((stream,index) => (\n\n                    <div key={index} className=\"carteResultats\">\n                        <img src={stream.profile_image_url} alt=\"resultat profile\" className=\"imgCarte\"/>\n\n                        <div className=\"cardBodyResults\">\n                            <h5 className=\"titreCartesStream\">{stream.display_name}</h5>\n                            <div className=\"txtResult\">\n                                {stream.description}\n                            </div>\n\n                            <Link\n                            className=\"lien\"\n                            to={{\n                                pathname: `/live/${stream.login}`\n                            }}\n                            >\n                                <div className=\"btnCarte btnResult\">Regarder {stream.display_name}</div>\n                            </Link>\n                        </div>\n                    </div>\n\n                ))}\n\n            </div>\n\n        </div> \n        :\n        <Erreur />\n    )\n}\n\nexport default Resultats;","import \"./App.css\";\nimport Header from \"./Components/Header/Header\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport Games from \"./Components/Games/Games\";\nimport TopStreams from \"./Components/TopStreams/TopStreams\";\nimport Live from \"./Components/Live/Live\";\nimport GameStreams from \"./Components/GameStreams/GameStreams\";\nimport Resultats from \"./Components/Resultats/Resultats\";\nimport Erreur from \"./Components/Erreur/Erreur\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL} forceRefresh={true}>\n      <div className=\"App\">\n        <Header />\n        <Sidebar />\n        <Switch>\n          <Route exact path=\"/\" component={Games} />\n          <Route exact path=\"/top-streams\" component={TopStreams} />\n          <Route exact path=\"/live/:slug\" component={Live} />\n          <Route exact path=\"/game/:slug\" component={GameStreams} />\n          <Route exact path=\"/resultats/:slug\" component={Resultats} />\n          <Route exact path=\"/resultats\" component={Erreur} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}